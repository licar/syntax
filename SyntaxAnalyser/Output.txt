1 PROGRAM program
1 IDENTIFIER MyFirstProgram
2 VAR var
3 IDENTIFIER x
3 COLON :
3 INTEGER int
3 SEMICOLON ;
4 IDENTIFIER y
4 COLON :
4 INTEGER int
4 SEMICOLON ;
5 IDENTIFIER z
5 COLON :
5 INTEGER int
5 SEMICOLON ;
6 IDENTIFIER array
6 COLON :
6 INTARRAY intarray
6 BRACKET_L [
6 CONST 9
6 BRACKET_R ]
6 SEMICOLON ;
7 IDENTIFIER array1
7 COLON :
7 INTARRAY intarray
7 BRACKET_L [
7 CONST 9
7 BRACKET_R ]
7 SEMICOLON ;
8 IDENTIFIER result
8 COLON :
8 INTARRAY intarray
8 BRACKET_L [
8 CONST 9
8 BRACKET_R ]
8 SEMICOLON ;
9 IDENTIFIER s
9 COLON :
9 INTEGER int
9 SEMICOLON ;
10 IDENTIFIER s1
10 COLON :
10 INTEGER int
10 SEMICOLON ;
11 IDENTIFIER s2
11 COLON :
11 INTEGER int
11 SEMICOLON ;
12 ENDVAR endvar
13 BEGIN begin
14 IDENTIFIER x
14 ASSIGN_OP =
14 MATH math
14 PARENTHESIS_L (
14 IDENTIFIER array
14 BRACKET_L [
14 IDENTIFIER s
14 BRACKET_R ]
14 PLUS +
14 IDENTIFIER array
14 BRACKET_L [
14 IDENTIFIER z
14 BRACKET_R ]
14 PARENTHESIS_R )
14 SEMICOLON ;
15 IDENTIFIER x
15 ASSIGN_OP =
15 MATH math
15 PARENTHESIS_L (
15 CONST 0
15 PARENTHESIS_R )
15 SEMICOLON ;
16 IDENTIFIER y
16 ASSIGN_OP =
16 MATH math
16 PARENTHESIS_L (
16 CONST 0
16 PARENTHESIS_R )
16 SEMICOLON ;
17 IDENTIFIER z
17 ASSIGN_OP =
17 MATH math
17 PARENTHESIS_L (
17 CONST 0
17 PARENTHESIS_R )
17 SEMICOLON ;
18 IDENTIFIER array
18 ASSIGN_OP =
18 BRACKET_L [
18 CONST 1
18 COMMA ,
18 CONST 2
18 COMMA ,
18 CONST 3
18 COMMA ,
18 CONST 3
18 COMMA ,
18 CONST 2
18 COMMA ,
18 CONST 1
18 COMMA ,
18 CONST 1
18 COMMA ,
18 CONST 3
18 COMMA ,
18 CONST 1
18 BRACKET_R ]
18 SEMICOLON ;
19 IDENTIFIER array1
19 ASSIGN_OP =
19 BRACKET_L [
19 CONST 3
19 COMMA ,
19 CONST 2
19 COMMA ,
19 CONST 1
19 COMMA ,
19 CONST 3
19 COMMA ,
19 CONST 2
19 COMMA ,
19 CONST 1
19 COMMA ,
19 CONST 3
19 COMMA ,
19 CONST 2
19 COMMA ,
19 CONST 1
19 BRACKET_R ]
19 SEMICOLON ;
20 WHILE while
20 BOOL bool
20 PARENTHESIS_L (
20 IDENTIFIER x
20 NE_OP !!
20 CONST 3
20 PARENTHESIS_R )
21 BEGIN begin
22 WHILE while
22 BOOL bool
22 PARENTHESIS_L (
22 IDENTIFIER y
22 NE_OP !!
22 CONST 3
22 PARENTHESIS_R )
23 BEGIN begin
24 IDENTIFIER s
24 ASSIGN_OP =
24 MATH math
24 PARENTHESIS_L (
24 CONST 0
24 PARENTHESIS_R )
24 SEMICOLON ;
25 WHILE while
25 BOOL bool
25 PARENTHESIS_L (
25 IDENTIFIER z
25 NE_OP !!
25 CONST 3
25 PARENTHESIS_R )
26 BEGIN begin
27 WRITE write
27 FROM from
27 MATH math
27 PARENTHESIS_L (
27 IDENTIFIER result
27 BRACKET_L [
27 IDENTIFIER s
27 BRACKET_R ]
27 PARENTHESIS_R )
27 SEMICOLON ;
28 READ read
28 TO to
28 MATH math
28 PARENTHESIS_L (
28 IDENTIFIER result
28 BRACKET_L [
28 IDENTIFIER s
28 BRACKET_R ]
28 PARENTHESIS_R )
28 SEMICOLON ;
29 IDENTIFIER s1
29 ASSIGN_OP =
29 MATH math
29 PARENTHESIS_L (
29 IDENTIFIER x
29 MULT *
29 CONST 3
29 PLUS +
29 IDENTIFIER z
29 PARENTHESIS_R )
29 SEMICOLON ;
30 IDENTIFIER s2
30 ASSIGN_OP =
30 MATH math
30 PARENTHESIS_L (
30 IDENTIFIER z
30 MULT *
30 CONST 3
30 PLUS +
30 IDENTIFIER y
30 PARENTHESIS_R )
30 SEMICOLON ;
31 IDENTIFIER s1
31 ASSIGN_OP =
31 MATH math
31 PARENTHESIS_L (
31 IDENTIFIER array
31 BRACKET_L [
31 CONST 1
31 BRACKET_R ]
31 PARENTHESIS_R )
31 SEMICOLON ;
32 IDENTIFIER s2
32 ASSIGN_OP =
32 MATH math
32 PARENTHESIS_L (
32 IDENTIFIER array1
32 BRACKET_L [
32 CONST 1
32 BRACKET_R ]
32 PARENTHESIS_R )
32 SEMICOLON ;
33 IDENTIFIER s2
33 ASSIGN_OP =
33 MATH math
33 PARENTHESIS_L (
33 IDENTIFIER s2
33 MULT *
33 IDENTIFIER s1
33 PARENTHESIS_R )
33 SEMICOLON ;
34 IDENTIFIER s
34 ASSIGN_OP =
34 MATH math
34 PARENTHESIS_L (
34 IDENTIFIER s
34 PLUS +
34 IDENTIFIER s2
34 PARENTHESIS_R )
34 SEMICOLON ;
35 IDENTIFIER z
35 ASSIGN_OP =
35 MATH math
35 PARENTHESIS_L (
35 IDENTIFIER z
35 PLUS +
35 CONST 1
35 PARENTHESIS_R )
35 SEMICOLON ;
36 END end
37 ENDWHILE endwhile
37 SEMICOLON ;
38 IDENTIFIER s1
38 ASSIGN_OP =
38 MATH math
38 PARENTHESIS_L (
38 IDENTIFIER x
38 MULT *
38 CONST 3
38 PLUS +
38 IDENTIFIER y
38 PARENTHESIS_R )
38 SEMICOLON ;
39 IDENTIFIER result
39 BRACKET_L [
39 IDENTIFIER s1
39 BRACKET_R ]
39 ASSIGN_OP =
39 MATH math
39 PARENTHESIS_L (
39 IDENTIFIER s
39 PARENTHESIS_R )
39 SEMICOLON ;
40 IDENTIFIER y
40 ASSIGN_OP =
40 MATH math
40 PARENTHESIS_L (
40 IDENTIFIER y
40 PLUS +
40 CONST 1
40 PARENTHESIS_R )
40 SEMICOLON ;
41 END end
42 ENDWHILE endwhile
42 SEMICOLON ;
43 IDENTIFIER x
43 ASSIGN_OP =
43 MATH math
43 PARENTHESIS_L (
43 IDENTIFIER x
43 PLUS +
43 CONST 1
43 PARENTHESIS_R )
43 SEMICOLON ;
44 END end
45 ENDWHILE endwhile
45 SEMICOLON ;
46 END end
47 ENDPROGRAM endprogram
